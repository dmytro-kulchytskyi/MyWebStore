@model MyStore.Mvc.Models.ProductViewModels.ProductSearchListViewModel
@{
    ViewBag.Title = "SearchPage";
}

<h2>Search</h2>

<hr />
@using (Html.BeginForm("SearchPage", "Product", FormMethod.Post, new { @class = "productsSortBar", role = "form", id = "productListSortBar" }))
{
    @Html.ValidationMessageFor(m => m.SearchQuery, "", new { @class = "text-danger" })
    @Html.TextBoxFor(m => m.SearchQuery, new { @class = "productsSortBarInput" })
    @Html.DropDownListFor(m => m.OrderField, Model.AvailableOrderFields.Select(f => new SelectListItem
    {
        Value = f,
        Text = string.IsNullOrEmpty(f) ? "Relevant" : f
    }), new { @class = "productsSortBarInput" })

    @Html.DropDownListFor(m => m.InverseOrder, new SelectListItem[] 
        {
            new SelectListItem
            {
                Text = "Default",
                Value = false.ToString()
            },
            new SelectListItem
            {
                Text = "Inverse",
                Value = true.ToString()
            }
        }, new { @class = "productsSortBarInput", style = "display: none" })
    <input type="submit" value="Search" class="productsSortBarInput">
}

<hr />

<div class="productsList" id="productsContainer">
    @if (Model.Items?.Count > 0)
    {
        foreach (var product in Model.Items)
        {
            @Html.Partial("ProductListItemPartial", product)
        }
    }
    else
    {
        <h3>No results</h3>
    }
</div>

@section Scripts {
    @Scripts.Render("~/Scripts/ProductsSortBar.js");
}


